{"version":3,"sources":["App.js","components/ResultComponent.js","components/KeyPadComponent.js","registerServiceWorker.js","index.js"],"names":["App","onClick","button","calculate","reset","backspace","setState","result","state","checkResult","includes","replace","eval","e","slice","className","this","Component","ResultComponent","props","KeyPadComponent","name","target","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"yjDAKMA,I,sZACJ,eAAe,IAAD,4MACZ,wBADY,MAQdC,QAAU,SAACC,GACM,MAAXA,EACF,MAAKC,YACe,MAAXD,EACT,MAAKE,QACe,OAAXF,EACT,MAAKG,YAEL,MAAKC,SAAS,CACZC,OAAQ,MAAKC,MAAMD,OAASL,KAjBpB,MAsBdC,UAAY,WACV,IAAIM,YAAc,GAEhBA,YADE,MAAKD,MAAMD,OAAOG,SAAS,MACf,MAAKF,MAAMD,OAAOI,QAAQ,KAAM,KAEhC,MAAKH,MAAMD,OAG3B,IACE,MAAKD,SAAS,CAEZC,QAASK,KAAKH,cAAgB,IAAM,KAEtC,MAAOI,GACP,MAAKP,SAAS,CACZC,OAAQ,YArCA,MA0CdH,MAAQ,WACN,MAAKE,SAAS,CACZC,OAAQ,MA5CE,MAgDdF,UAAY,WACV,MAAKC,SAAS,CACZC,OAAQ,MAAKC,MAAMD,OAAOO,MAAM,GAAI,MA/CtC,MAAKN,MAAQ,CACXD,OAAQ,IAJE,M,kNAsDd,WACE,OACE,2EACE,mEAAKQ,UAAU,kBAAf,UACE,gGACA,2DAAC,2DAAD,CAAiBR,OAAQS,KAAKR,MAAMD,SACpC,2DAAC,2DAAD,CAAiBN,QAASe,KAAKf,mB,KA7DvBgB,8CAoEHjB,2B,2ECvETkB,E,4JACJ,WACE,IAAMX,EAAWS,KAAKG,MAAhBZ,OACN,OACE,qBAAKQ,UAAU,SAAf,SACE,4BAAIR,U,GALkBU,aAWfC,O,2ECXTE,E,4JACJ,WAAU,IAAD,OACP,OACE,sBAAKL,UAAU,SAAf,UACE,wBAAQM,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,KAAKpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA9D,gBAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,uBAEA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,uBAEA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,uBAEA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,uBAEA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,eAGA,wBAAQA,KAAK,IAAIpB,QAAS,SAACY,GAAD,OAAO,EAAKM,MAAMlB,QAAQY,EAAES,OAAOD,OAA7D,kBAGA,8B,GAxEsBJ,aA8EfG,O,qHCtETG,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7B,QACfuB,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAACC,GACNH,QAAQG,MAAM,4CAA6CA,M,WCzEjEC,IAASC,OAAO,cAAC9C,EAAA,EAAD,IAAS+C,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,4CAAwBzB,OAAOC,UAC3CyB,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMoB,4CAAN,sBAEP3B,IAiDV,SAAiCO,GAE/BuB,MAAMvB,GACHI,MAAK,SAACoB,GAGiB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C3B,UAAUC,cAAc2B,MAAMzB,MAAK,SAACC,GAClCA,EAAayB,aAAa1B,MAAK,WAC7BT,OAAOC,SAASmC,eAKpBhC,EAAgBC,MAGnBa,OAAM,WACLF,QAAQC,IACN,oEArEAoB,CAAwBhC,GAIxBC,UAAUC,cAAc2B,MAAMzB,MAAK,WACjCO,QAAQC,IACN,gHAMJb,EAAgBC,OCzCxBiC,K","file":"static/js/main.1b018cfb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./app.css\";\nimport ResultComponent from \"./components/ResultComponent\";\nimport KeyPadComponent from \"./components/KeyPadComponent\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      result: \"\"\n    };\n  }\n\n  onClick = (button) => {\n    if (button === \"=\") {\n      this.calculate();\n    } else if (button === \"C\") {\n      this.reset();\n    } else if (button === \"CE\") {\n      this.backspace();\n    } else {\n      this.setState({\n        result: this.state.result + button\n      });\n    }\n  };\n\n  calculate = () => {\n    var checkResult = \"\";\n    if (this.state.result.includes(\"--\")) {\n      checkResult = this.state.result.replace(\"--\", \"+\");\n    } else {\n      checkResult = this.state.result;\n    }\n\n    try {\n      this.setState({\n        // eslint-disable-next-line\n        result: (eval(checkResult) || \"\") + \"\"\n      });\n    } catch (e) {\n      this.setState({\n        result: \"error\"\n      });\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      result: \"\"\n    });\n  };\n\n  backspace = () => {\n    this.setState({\n      result: this.state.result.slice(0, -1)\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"calculator-body\">\n          <h1>Simple Calculator</h1>\n          <ResultComponent result={this.state.result} />\n          <KeyPadComponent onClick={this.onClick} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\n\r\nclass ResultComponent extends Component {\r\n  render() {\r\n    let { result } = this.props;\r\n    return (\r\n      <div className=\"result\">\r\n        <p>{result}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultComponent;\r\n","import React, { Component } from \"react\";\r\n\r\nclass KeyPadComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"button\">\r\n        <button name=\"(\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          (\r\n        </button>\r\n        <button name=\"CE\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          CE\r\n        </button>\r\n        <button name=\")\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          )\r\n        </button>\r\n        <button name=\"C\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          C\r\n        </button>\r\n        <br />\r\n\r\n        <button name=\"1\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          1\r\n        </button>\r\n        <button name=\"2\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          2\r\n        </button>\r\n        <button name=\"3\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          3\r\n        </button>\r\n        <button name=\"+\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          +\r\n        </button>\r\n        <br />\r\n\r\n        <button name=\"4\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          4\r\n        </button>\r\n        <button name=\"5\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          5\r\n        </button>\r\n        <button name=\"6\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          6\r\n        </button>\r\n        <button name=\"-\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          -\r\n        </button>\r\n        <br />\r\n\r\n        <button name=\"7\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          7\r\n        </button>\r\n        <button name=\"8\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          8\r\n        </button>\r\n        <button name=\"9\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          9\r\n        </button>\r\n        <button name=\"*\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          x\r\n        </button>\r\n        <br />\r\n\r\n        <button name=\".\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          .\r\n        </button>\r\n        <button name=\"0\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          0\r\n        </button>\r\n        <button name=\"=\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          =\r\n        </button>\r\n        <button name=\"/\" onClick={(e) => this.props.onClick(e.target.name)}>\r\n          รท\r\n        </button>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KeyPadComponent;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}